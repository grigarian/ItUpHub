{"ast":null,"code":"var _jsxFileName = \"/Users/grigarian/ituphub-client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = user => {\n    setUser(user);\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        var _data$userProfile$pro, _data$userProfile, _data$userProfile$pro2;\n        const res = await axios.get(\"/user/current\", {\n          withCredentials: true\n        });\n\n        // Здесь ожидаем, что res.data будет примерно таким:\n        // {\n        //   id: string,\n        //   userName: string,\n        //   email: string,\n        //   userProfile: {\n        //     profilePicture: { path: string }\n        //   }\n        // }\n\n        const data = res.data;\n        setUser({\n          id: data.id,\n          userName: data.userName,\n          email: data.email,\n          profilePicture: (_data$userProfile$pro = (_data$userProfile = data.userProfile) === null || _data$userProfile === void 0 ? void 0 : (_data$userProfile$pro2 = _data$userProfile.profilePicture) === null || _data$userProfile$pro2 === void 0 ? void 0 : _data$userProfile$pro2.path) !== null && _data$userProfile$pro !== void 0 ? _data$userProfile$pro : \"\" // если нет картинки — пустая строка\n        });\n      } catch (error) {\n        setUser(null);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","login","logout","fetchCurrentUser","_data$userProfile$pro","_data$userProfile","_data$userProfile$pro2","res","get","withCredentials","data","id","userName","email","profilePicture","userProfile","path","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/grigarian/ituphub-client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ntype User = {\n  id: string;\n  userName: string;\n  email: string;\n  profilePicture: string; // сюда кладем url картинки\n};\n\ntype AuthContextType = {\n  user: User | null;\n  login: (user: User) => void;\n  logout: () => void;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const login = (user: User) => {\n    setUser(user);\n  };\n\n  const logout = () => {\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await axios.get(\"/user/current\", { withCredentials: true });\n\n        // Здесь ожидаем, что res.data будет примерно таким:\n        // {\n        //   id: string,\n        //   userName: string,\n        //   email: string,\n        //   userProfile: {\n        //     profilePicture: { path: string }\n        //   }\n        // }\n\n        const data = res.data;\n\n        setUser({\n          id: data.id,\n          userName: data.userName,\n          email: data.email,\n          profilePicture: data.userProfile?.profilePicture?.path ?? \"\", // если нет картинки — пустая строка\n        });\n      } catch (error) {\n        setUser(null);\n      }\n    };\n\n    fetchCurrentUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMY,KAAK,GAAIF,IAAU,IAAK;IAC5BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QAAA,IAAAC,qBAAA,EAAAC,iBAAA,EAAAC,sBAAA;QACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,eAAe,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;;QAEvE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA,MAAMC,IAAI,GAAGH,GAAG,CAACG,IAAI;QAErBV,OAAO,CAAC;UACNW,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,QAAQ,EAAEF,IAAI,CAACE,QAAQ;UACvBC,KAAK,EAAEH,IAAI,CAACG,KAAK;UACjBC,cAAc,GAAAV,qBAAA,IAAAC,iBAAA,GAAEK,IAAI,CAACK,WAAW,cAAAV,iBAAA,wBAAAC,sBAAA,GAAhBD,iBAAA,CAAkBS,cAAc,cAAAR,sBAAA,uBAAhCA,sBAAA,CAAkCU,IAAI,cAAAZ,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAE;QAChE,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdjB,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IAEDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAL,QAAA,EAClDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CA/CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAiDzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACiC,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACzE,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}