{"ast":null,"code":"var _jsxFileName = \"/Users/grigarian/ituphub-client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const loadUserProfile = async userId => {\n    try {\n      var _data$userProfile$pro, _data$userProfile, _data$userProfile$pro2;\n      const res = await axios.get(`/api/users/${userId}`, {\n        withCredentials: true\n      });\n      const data = res.data;\n      setUser({\n        id: data.id,\n        email: data.email,\n        userName: data.userName,\n        profilePicture: (_data$userProfile$pro = (_data$userProfile = data.userProfile) === null || _data$userProfile === void 0 ? void 0 : (_data$userProfile$pro2 = _data$userProfile.profilePicture) === null || _data$userProfile$pro2 === void 0 ? void 0 : _data$userProfile$pro2.path) !== null && _data$userProfile$pro !== void 0 ? _data$userProfile$pro : ''\n      });\n    } catch (error) {\n      console.error('Ошибка загрузки профиля:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loadUserProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loadUserProfile","userId","_data$userProfile$pro","_data$userProfile","_data$userProfile$pro2","res","get","withCredentials","data","id","email","userName","profilePicture","userProfile","path","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/grigarian/ituphub-client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\ntype User = {\n  id: string;\n  email: string;\n  userName: string;\n  profilePicture: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  setUser: React.Dispatch<React.SetStateAction<User | null>>;\n  loadUserProfile: (userId: string) => Promise<void>;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUserProfile = async (userId: string) => {\n    try {\n      const res = await axios.get(`/api/users/${userId}`, { withCredentials: true });\n      const data = res.data;\n\n      setUser({\n        id: data.id,\n        email: data.email,\n        userName: data.userName,\n        profilePicture: data.userProfile?.profilePicture?.path ?? '',\n      });\n    } catch (error) {\n      console.error('Ошибка загрузки профиля:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, setUser, loadUserProfile }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMW,eAAe,GAAG,MAAOC,MAAc,IAAK;IAChD,IAAI;MAAA,IAAAC,qBAAA,EAAAC,iBAAA,EAAAC,sBAAA;MACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,cAAcL,MAAM,EAAE,EAAE;QAAEM,eAAe,EAAE;MAAK,CAAC,CAAC;MAC9E,MAAMC,IAAI,GAAGH,GAAG,CAACG,IAAI;MAErBT,OAAO,CAAC;QACNU,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;QACvBC,cAAc,GAAAV,qBAAA,IAAAC,iBAAA,GAAEK,IAAI,CAACK,WAAW,cAAAV,iBAAA,wBAAAC,sBAAA,GAAhBD,iBAAA,CAAkBS,cAAc,cAAAR,sBAAA,uBAAhCA,sBAAA,CAAkCU,IAAI,cAAAZ,qBAAA,cAAAA,qBAAA,GAAI;MAC5D,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEC,OAAO;MAAEC;IAAgB,CAAE;IAAAJ,QAAA,EAC7DA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CAxBWF,YAAqD;AAAA4B,EAAA,GAArD5B,YAAqD;AA0BlE,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACiC,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACzE,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}