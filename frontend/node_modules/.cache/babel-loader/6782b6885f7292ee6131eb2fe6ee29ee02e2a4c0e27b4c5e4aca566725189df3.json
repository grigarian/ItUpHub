{"ast":null,"code":"var _jsxFileName = \"/Users/grigarian/ituphub-client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = userData => {\n    setUser(userData);\n  };\n  const logout = async () => {\n    // ... существующая реализация ...\n  };\n\n  // Новый метод для обновления пользователя\n  const updateUser = updatedUser => {\n    setUser(prev => {\n      if (!prev) return null;\n      return {\n        ...prev,\n        ...updatedUser\n      };\n    });\n  };\n\n  // ... остальной код ...\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      updateUser // Добавляем в провайдер\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","login","userData","logout","updateUser","updatedUser","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/grigarian/ituphub-client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ntype User = {\n  id: string;\n  userName: string;\n  email: string;\n  profilePicture?: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  login: (user: User) => void;\n  logout: () => Promise<void>;\n  updateUser: (updatedUser: User) => void; // Добавленный метод\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  \n  const login = (userData: User) => {\n    setUser(userData);\n  };\n\n  const logout = async () => {\n    // ... существующая реализация ...\n  };\n\n  // Новый метод для обновления пользователя\n  const updateUser = (updatedUser: User) => {\n    setUser(prev => {\n      if (!prev) return null;\n      return { ...prev, ...updatedUser };\n    });\n  };\n\n  // ... остальной код ...\n\n  return (\n    <AuthContext.Provider \n      value={{ \n        user,\n        login,\n        logout,\n        updateUser // Добавляем в провайдер\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBvE,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMU,KAAK,GAAIC,QAAc,IAAK;IAChCF,OAAO,CAACE,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB;EAAA,CACD;;EAED;EACA,MAAMC,UAAU,GAAIC,WAAiB,IAAK;IACxCL,OAAO,CAACM,IAAI,IAAI;MACd,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;MACtB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAY,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;;EAEA,oBACEZ,OAAA,CAACC,WAAW,CAACa,QAAQ;IACnBC,KAAK,EAAE;MACLT,IAAI;MACJE,KAAK;MACLE,MAAM;MACNC,UAAU,CAAC;IACb,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CAjCWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAmCzB,OAAO,MAAMkB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG1B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACsB,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACzE,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}