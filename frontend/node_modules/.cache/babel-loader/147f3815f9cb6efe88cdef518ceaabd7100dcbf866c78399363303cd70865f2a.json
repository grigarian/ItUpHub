{"ast":null,"code":"// src/utils/errorMessages.ts\n\nexport const errorMessagesMap = {\n  \"invalid.password\": \"Пароль должен содержать минимум 8 символов, хотя бы одну цифру и специальный символ\",\n  \"invalid.email\": \"Некорректный адрес электронной почты\",\n  \"failed.to.login\": \"Неверный логин или пароль\",\n  \"value.is.invalid\": \"Введено некорректное значение\",\n  \"record.not.found\": \"Запись не найдена\",\n  \"unauthorized\": \"Пользователь не авторизован\"\n  // сюда добавляй остальные коды ошибок\n};\n\n/**\n * Функция для получения понятного сообщения по коду ошибки.\n * Если код неизвестен, возвращает либо сообщение из backendError.message, либо дефолтное сообщение.\n */\nexport function getErrorMessage(backendError) {\n  if (backendError.code && errorMessagesMap[backendError.code]) {\n    return errorMessagesMap[backendError.code];\n  }\n  if (backendError.message) {\n    return backendError.message;\n  }\n  return 'Произошла ошибка на сервере';\n}","map":{"version":3,"names":["errorMessagesMap","getErrorMessage","backendError","code","message"],"sources":["/Users/grigarian/ituphub-client/src/utils/errorMessages.ts"],"sourcesContent":["// src/utils/errorMessages.ts\n\nexport const errorMessagesMap: Record<string, string> = {\n  \"invalid.password\": \"Пароль должен содержать минимум 8 символов, хотя бы одну цифру и специальный символ\",\n  \"invalid.email\": \"Некорректный адрес электронной почты\",\n  \"failed.to.login\": \"Неверный логин или пароль\",\n  \"value.is.invalid\": \"Введено некорректное значение\",\n  \"record.not.found\": \"Запись не найдена\",\n  \"unauthorized\": \"Пользователь не авторизован\",\n  // сюда добавляй остальные коды ошибок\n};\n\n/**\n * Функция для получения понятного сообщения по коду ошибки.\n * Если код неизвестен, возвращает либо сообщение из backendError.message, либо дефолтное сообщение.\n */\nexport function getErrorMessage(backendError: { code?: string; message?: string }): string {\n  if (backendError.code && errorMessagesMap[backendError.code]) {\n    return errorMessagesMap[backendError.code];\n  }\n  if (backendError.message) {\n    return backendError.message;\n  }\n  return 'Произошла ошибка на сервере';\n}"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,gBAAwC,GAAG;EACtD,kBAAkB,EAAE,qFAAqF;EACzG,eAAe,EAAE,sCAAsC;EACvD,iBAAiB,EAAE,2BAA2B;EAC9C,kBAAkB,EAAE,+BAA+B;EACnD,kBAAkB,EAAE,mBAAmB;EACvC,cAAc,EAAE;EAChB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,YAAiD,EAAU;EACzF,IAAIA,YAAY,CAACC,IAAI,IAAIH,gBAAgB,CAACE,YAAY,CAACC,IAAI,CAAC,EAAE;IAC5D,OAAOH,gBAAgB,CAACE,YAAY,CAACC,IAAI,CAAC;EAC5C;EACA,IAAID,YAAY,CAACE,OAAO,EAAE;IACxB,OAAOF,YAAY,CAACE,OAAO;EAC7B;EACA,OAAO,6BAA6B;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}