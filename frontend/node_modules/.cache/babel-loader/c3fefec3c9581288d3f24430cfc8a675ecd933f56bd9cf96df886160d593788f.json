{"ast":null,"code":"var _jsxFileName = \"/Users/grigarian/ituphub-client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const navigate = useNavigate();\n  console.log('Текущий пользователь:', user);\n  const loadUser = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/user/current', {\n        withCredentials: true\n      });\n      setUser({\n        id: data.id,\n        userName: data.userName,\n        email: data.email,\n        profilePicture: data.picture,\n        bio: data.bio || ''\n      });\n    } catch (error) {\n      setUser(null);\n    } finally {\n      setIsInitialized(true);\n    }\n  };\n  const updateUser = updates => {\n    if (user) {\n      setUser({\n        ...user,\n        ...updates\n      });\n    }\n  };\n  const logout = async () => {\n    try {\n      // 1. Отправляем запрос на бэкенд для выхода\n      await axios.post(\"/user/logout\", {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // 2. Очищаем состояние в любом случае\n      setUser(null);\n      // 3. Перенаправляем на главную\n      navigate(\"/\");\n    }\n  };\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const login = userData => {\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      updateUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n// Убедись, что хук экспортируется как именованный экспорт\n_s(AuthProvider, \"MMEZqfVUpkv9UBo3RLut8JmUrk0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isInitialized","setIsInitialized","navigate","console","log","loadUser","data","get","withCredentials","id","userName","email","profilePicture","picture","bio","error","updateUser","updates","logout","post","login","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/grigarian/ituphub-client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype User = {\n  id: string;\n  userName: string;\n  email: string;\n  profilePicture: string;\n  bio: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  login: (user: User) => void;\n  logout: () => Promise<void>;\n  updateUser: (updates: Partial<User>) => void;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const navigate = useNavigate();\nconsole.log('Текущий пользователь:', user);\n  const loadUser = async () => {\n    try {\n      const { data } = await axios.get('/user/current', { \n        withCredentials: true \n      });\n      setUser({\n        id: data.id,\n        userName: data.userName,\n        email: data.email,\n        profilePicture: data.picture,\n        bio: data.bio || ''\n      });\n    } catch (error) {\n      setUser(null);\n    } finally {\n      setIsInitialized(true);\n    }\n  };\n\n  const updateUser = (updates: Partial<User>) => {\n    if (user) {\n      setUser({ ...user, ...updates });\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // 1. Отправляем запрос на бэкенд для выхода\n      await axios.post(\"/user/logout\", {}, { \n        withCredentials: true \n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // 2. Очищаем состояние в любом случае\n      setUser(null);\n      // 3. Перенаправляем на главную\n      navigate(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  const login = (userData: User) => {\n    setUser(userData);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, updateUser, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Убедись, что хук экспортируется как именованный экспорт\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}