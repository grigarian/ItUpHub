{"ast":null,"code":"var _jsxFileName = \"/Users/grigarian/ituphub-client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const login = user => {\n    setUser(user);\n  };\n  const logout = async () => {\n    try {\n      // 1. Отправляем запрос на бэкенд для выхода\n      await axios.post(\"/user/logout\", {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // 2. Очищаем состояние в любом случае\n      setUser(null);\n      // 3. Перенаправляем на главную\n      navigate(\"/\");\n    }\n  };\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        var _res$data$userProfile, _res$data$userProfile2, _res$data$userProfile3;\n        const res = await axios.get(\"/user/current\", {\n          withCredentials: true\n        });\n        setUser({\n          id: res.data.id,\n          userName: res.data.userName,\n          email: res.data.email,\n          profilePicture: (_res$data$userProfile = (_res$data$userProfile2 = res.data.userProfile) === null || _res$data$userProfile2 === void 0 ? void 0 : (_res$data$userProfile3 = _res$data$userProfile2.profilePicture) === null || _res$data$userProfile3 === void 0 ? void 0 : _res$data$userProfile3.path) !== null && _res$data$userProfile !== void 0 ? _res$data$userProfile : \"\"\n        });\n      } catch (error) {\n        setUser(null);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","navigate","login","logout","post","withCredentials","error","console","fetchCurrentUser","_res$data$userProfile","_res$data$userProfile2","_res$data$userProfile3","res","get","id","data","userName","email","profilePicture","userProfile","path","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/grigarian/ituphub-client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype User = {\n  id: string;\n  userName: string;\n  email: string;\n  profilePicture: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  login: (user: User) => void;\n  logout: () => Promise<void>; // Делаем асинхронным\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const navigate = useNavigate();\n\n  const login = (user: User) => {\n    setUser(user);\n  };\n\n  const logout = async () => {\n    try {\n      // 1. Отправляем запрос на бэкенд для выхода\n      await axios.post(\"/user/logout\", {}, { \n        withCredentials: true \n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // 2. Очищаем состояние в любом случае\n      setUser(null);\n      // 3. Перенаправляем на главную\n      navigate(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await axios.get(\"/user/current\", { \n          withCredentials: true \n        });\n\n        setUser({\n          id: res.data.id,\n          userName: res.data.userName,\n          email: res.data.email,\n          profilePicture: res.data.userProfile?.profilePicture?.path ?? \"\",\n        });\n      } catch (error) {\n        setUser(null);\n      }\n    };\n\n    fetchCurrentUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAcC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe/C,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMa,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,KAAK,GAAIH,IAAU,IAAK;IAC5BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF;MACA,MAAMb,KAAK,CAACc,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE;QACnCC,eAAe,EAAE;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACR;MACAN,OAAO,CAAC,IAAI,CAAC;MACb;MACAC,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QACF,MAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,eAAe,EAAE;UAC3CR,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFL,OAAO,CAAC;UACNc,EAAE,EAAEF,GAAG,CAACG,IAAI,CAACD,EAAE;UACfE,QAAQ,EAAEJ,GAAG,CAACG,IAAI,CAACC,QAAQ;UAC3BC,KAAK,EAAEL,GAAG,CAACG,IAAI,CAACE,KAAK;UACrBC,cAAc,GAAAT,qBAAA,IAAAC,sBAAA,GAAEE,GAAG,CAACG,IAAI,CAACI,WAAW,cAAAT,sBAAA,wBAAAC,sBAAA,GAApBD,sBAAA,CAAsBQ,cAAc,cAAAP,sBAAA,uBAApCA,sBAAA,CAAsCS,IAAI,cAAAX,qBAAA,cAAAA,qBAAA,GAAI;QAChE,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdN,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IAEDQ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEG,KAAK;MAAEC;IAAO,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CAlDWF,YAAY;EAAA,QAENL,WAAW;AAAA;AAAAoC,EAAA,GAFjB/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}