{"ast":null,"code":"var _jsxFileName = \"/Users/grigarian/ituphub-client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\naxios.defaults.withCredentials = true;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const navigate = useNavigate();\n  console.log('Текущий пользователь:', user);\n  const loadUser = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/user/current', {\n        withCredentials: true\n      });\n      setUser(mapUserResponseToUser(data));\n    } catch (error) {\n      setUser(null);\n    } finally {\n      setIsInitialized(true);\n    }\n  };\n  const updateUser = updates => {\n    if (user) {\n      setUser({\n        ...user,\n        ...updates\n      });\n    }\n  };\n  const mapUserResponseToUser = data => ({\n    id: data.id,\n    userName: data.userName,\n    email: data.email,\n    profilePicture: data.picture ? `${data.picture}?t=${Date.now()}` : '/default-avatar.png',\n    bio: data.bio || '',\n    skills: data.skills || []\n  });\n  async function refreshUser() {\n    try {\n      const {\n        data\n      } = await axios.get('/user/current', {\n        withCredentials: true\n      });\n      setUser(mapUserResponseToUser(data));\n    } catch (error) {\n      console.error('Ошибка при обновлении пользователя:', error);\n    }\n  }\n  const logout = async () => {\n    try {\n      // 1. Отправляем запрос на бэкенд для выхода\n      await axios.post(\"/user/logout\", {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // 2. Очищаем состояние в любом случае\n      setUser(null);\n      // 3. Перенаправляем на главную\n      navigate(\"/\");\n    }\n  };\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const login = userData => {\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      updateUser,\n      login,\n      logout,\n      refreshUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n// Убедись, что хук экспортируется как именованный экспорт\n_s(AuthProvider, \"MMEZqfVUpkv9UBo3RLut8JmUrk0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","defaults","withCredentials","AuthProvider","children","_s","user","setUser","isInitialized","setIsInitialized","navigate","console","log","loadUser","data","get","mapUserResponseToUser","error","updateUser","updates","id","userName","email","profilePicture","picture","Date","now","bio","skills","refreshUser","logout","post","login","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/grigarian/ituphub-client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype Skill = {\n  id: string;\n  title: string;\n}\n\ntype User = {\n  id: string;\n  userName: string;\n  email: string;\n  profilePicture: string;\n  bio: string;\n  skills: Skill[];\n};\n\ntype AuthContextType = {\n  user: User | null;\n  login: (user: User) => void;\n  logout: () => Promise<void>;\n  updateUser: (updates: Partial<User>) => void;\n  refreshUser: () => Promise<void>;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\naxios.defaults.withCredentials = true;\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const navigate = useNavigate();\nconsole.log('Текущий пользователь:', user);\n  const loadUser = async () => {\n    try {\n      const { data } = await axios.get('/user/current', { \n        withCredentials: true \n      });\n      setUser(mapUserResponseToUser(data));\n    } catch (error) {\n      setUser(null);\n    } finally {\n      setIsInitialized(true);\n    }\n  };\n\n  const updateUser = (updates: Partial<User>) => {\n    if (user) {\n      setUser({ ...user, ...updates });\n    }\n  };\n\n  const mapUserResponseToUser = (data: any): User => ({\n    id: data.id,\n    userName: data.userName,\n    email: data.email,\n    profilePicture: data.picture\n      ? `${data.picture}?t=${Date.now()}`\n      : '/default-avatar.png',\n    bio: data.bio || '',\n    skills: data.skills || [],\n  });\n\n  async function refreshUser() {\n    try {\n      const { data } = await axios.get('/user/current', { withCredentials: true });\n      setUser(mapUserResponseToUser(data));\n    } catch (error) {\n      console.error('Ошибка при обновлении пользователя:', error);\n    }\n  }\n\n  const logout = async () => {\n    try {\n      // 1. Отправляем запрос на бэкенд для выхода\n      await axios.post(\"/user/logout\", {}, { \n        withCredentials: true \n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // 2. Очищаем состояние в любом случае\n      setUser(null);\n      // 3. Перенаправляем на главную\n      navigate(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  const login = (userData: User) => {\n    setUser(userData);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, updateUser, login, logout, refreshUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Убедись, что хук экспортируется как именованный экспорт\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}