FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base

# Create non-root user
RUN addgroup --system --gid 1001 appgroup && \
    adduser --system --uid 1001 --ingroup appgroup appuser

WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create log directory
RUN mkdir -p /var/log/ituphub && \
    chown -R appuser:appgroup /var/log/ituphub

EXPOSE 8090

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy project files
COPY ["GrowSphere.Web/GrowSphere.Web.csproj", "GrowSphere.Web/"]
COPY ["GrowSphere.Application/GrowSphere.Application.csproj", "GrowSphere.Application/"]
COPY ["GrowSphere.Core/GrowSphere.Domain.csproj", "GrowSphere.Core/"]

# Restore dependencies
RUN dotnet restore "./GrowSphere.Web/GrowSphere.Web.csproj"

# Copy source code
COPY . .

# Build the application
WORKDIR "/src/GrowSphere.Web"
RUN dotnet build "./GrowSphere.Web.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./GrowSphere.Web.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final

# Copy published application
WORKDIR /app
COPY --from=publish /app/publish .

# Set ownership to non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8090/health || exit 1

ENTRYPOINT ["dotnet", "GrowSphere.Web.dll"] 